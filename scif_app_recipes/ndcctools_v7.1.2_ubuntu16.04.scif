#%appinstall short_workflow
#    # Install Makeflow
#    conda create --prefix "${PWD}/conda" --yes -c conda-forge ndcctools
#
#%apprun short_workflow
#    echo "{\"ORTHOMOSAIC_NAME\": \"${1}\", \"OUTPUT_FOLDER\": \"/output\"  }" > ${SCIF_APPDATA}/jx-params.json
#    if [ ! -f "/output/plots.json" ]; then ${SCIF_APPROOT_odm_workflow}/src/generate_geojson.sh "${2}" "/output/plots.json"; fi
#    conda run --prefix "${SCIF_APPROOT}/conda" makeflow \
#        --jx \
#        --jx-args="/scif/apps/odm_workflow/src/jx-args.json" \
#        --jx-args="${SCIF_APPDATA}/jx-params.json" \
#        --log-verbose \
#        --retry-count=1 \
#        --change-directory="${SCIF_APPDATA}" \
#        --makeflow-log="${SCIF_APPDATA}/workflow.jx.makeflowlog" \
#        --batch-log="${SCIF_APPDATA}/workflow.jx.batchlog" \
#        ${3} \
#        "/scif/apps/odm_workflow/src/short_workflow.jx"
#    if [ ! -f "/output/canopycover_fileslist.json" ]; then "/scif/apps/odm_workflow/src/prep-canopy-cover.sh" "${1}"; fi
#    conda run --prefix "${SCIF_APPROOT}/conda" makeflow \
#        --jx \
#        --jx-args="/scif/apps/odm_workflow/src/jx-args.json" \
#        --jx-args="/output/canopycover_fileslist.json" \
#        --log-verbose \
#        --retry-count=1 \
#        --change-directory="${SCIF_APPDATA}" \
#        --makeflow-log="${SCIF_APPDATA}/canopy-cover.jx.makeflowlog" \
#        --batch-log="${SCIF_APPDATA}/canopy-cover.jx.batchlog" \
#        ${3} \
#        "/scif/apps/odm_workflow/src/canopy-cover.jx"
#    if [ -f "/output/plots.json" ] && [[ "${3}" =~ "--clean" ]]; then echo "Removing plots.json" && rm "/output/plots.json"; fi
#    if [ -f "/output/canopycover_fileslist.json" ] && [[ "${3}" =~ "--clean" ]]; then echo "Removing fileslist.json" && rm "/output/canopycover_fileslist.json"; fi
#
#%apphelp short_workflow
#    Refer to the documentation on how to run this app: https://github.com/AgPipeline/drone-makeflow#canopy-cover-orthomosaic-and-plot-boundaries-

%appinstall betydb2geojson
    # Install Makeflow and other dependencies
    conda create --prefix "${PWD}/conda" --yes -c conda-forge ndcctools requests gdal

%apprun betydb2geojson
    conda run --prefix "${SCIF_APPROOT}/conda" makeflow \
        --jx \
        --jx-args="/scif/apps/src/jx-args.json" \
        --log-verbose \
        --retry-count=1 \
        --change-directory="${SCIF_APPDATA}" \
        --makeflow-log="${SCIF_APPDATA}/workflow.jx.makeflowlog" \
        --batch-log="${SCIF_APPDATA}/workflow.jx.batchlog" \
        ${1} \
        "/scif/apps/src/betydb2geojson_workflow.jx"

%apphelp betydb2geojson
    This app provides a conversion from BETYdb site data to GeoJSON plot geometries.

    Expected keys in the "jx-args.json" file:
        BETYDB_URL - the value is the URL of the BETYdb instance to get plot geometries from
        PLOT_SHAPEFILE - the path to save the GeoJSON to

    Sample command:
        scif run betydb2geojson

    See also:
        https://github.com/AgPipeline/drone-makeflow/blob/master/README.md

%appinstall shp2geojson
    # Install Makeflow and other dependencies
    conda create --prefix "${PWD}/conda" --yes -c conda-forge ndcctools

%apprun shp2geojson
    conda run --prefix "${SCIF_APPROOT}/conda" makeflow \
        --jx \
        --jx-args="/scif/apps/src/jx-args.json" \
        --log-verbose \
        --retry-count=1 \
        --change-directory="${SCIF_APPDATA}" \
        --makeflow-log="${SCIF_APPDATA}/workflow.jx.makeflowlog" \
        --batch-log="${SCIF_APPDATA}/workflow.jx.batchlog" \
        ${1} \
        "/scif/apps/src/shp2geojson_workflow.jx"

%apphelp shp2geojson
    This app provides a conversion from a shapefile to GeoJSON plot geometries.

    Expected keys in the "jx-args.json" file:
        PLOT_GEOMETRY_FILE - the path to the shapefile to convert to GeoJSON
        PLOT_SHAPEFILE - the path to save the GeoJSON to

    Sample command:
        scif run shp2geojson

    See also:
        https://github.com/AgPipeline/drone-makeflow/blob/master/README.md

%appinstall merge_csv
    # Install Makeflow and other dependencies
    conda create --prefix "${PWD}/conda" --yes -c conda-forge ndcctools

%apprun merge_csv
    conda run --prefix "${SCIF_APPROOT}/conda" makeflow \
        --jx \
        --jx-args="/scif/apps/src/jx-args.json" \
        --log-verbose \
        --retry-count=1 \
        --change-directory="${SCIF_APPDATA}" \
        --makeflow-log="${SCIF_APPDATA}/workflow.jx.makeflowlog" \
        --batch-log="${SCIF_APPDATA}/workflow.jx.batchlog" \
        ${1} \
        "/scif/apps/src/merge_csv_workflow.jx"

%apphelp merge_csv
    This app searches folders for CSV files and merges them into the output folder

    Expected keys in the "jx-args.json" file:
        MERGECSV_SOURCE - the path to the shapefile to convert to GeoJSON
        MERGECSV_TARGET - the path to save the GeoJSON to
        MERGECSV_OPTIONS - options for processing CSV files; set to "--help" to display all available options without processing files

    Sample command:
        scif run merge_csv

    See also:
        https://github.com/AgPipeline/drone-makeflow/blob/master/README.md
