{
  "define": {
    "CANOPY_COVER_DOCKER_IMAGE": "agdrone/transformer-canopycover:" + CANOPY_COVER_DOCKER_IMAGE_VERSION,
    "CANOPY_COVER_METADATA": BASE_DIR + EXPERIMENT_METADATA,
    "CANOPY_COVER_WORKSPACE_DIR_NAME": "workspace/canopycover",
    "CANOPY_COVER_WORKSPACE": BASE_DIR + CANOPY_COVER_WORKSPACE_DIR_NAME,
    "CANOPY_COVER_CACHE": BASE_DIR + "cache",
    "CACHE_RESULTS_SCRIPT": BASE_DIR + "cache_results.py"
  },
  "rules": [
    {
      "command" : "mkdir -p ${CANOPY_COVER_WORKSPACE} && chmod a+w ${CANOPY_COVER_WORKSPACE}",
      "environment": {
        "CANOPY_COVER_WORKSPACE": CANOPY_COVER_WORKSPACE
      },
      "inputs": [],
      "outputs": [
        CANOPY_COVER_WORKSPACE
      ]
    },
    {
      "command" : "mkdir -p ${CANOPY_COVER_CACHE}",
      "environment": {
        "CANOPY_COVER_CACHE": CANOPY_COVER_CACHE
      },
      "inputs": [],
      "outputs": [
        CANOPY_COVER_CACHE
      ]
    },
    {
      "command": "docker run --rm -v $(pwd):${DOCKER_IMAGE_MOUNT_POINT} ${DOCKER_PARAMS} ${DOCKER_IMAGE} --metadata ${METADATA}  --metadata ${EXPERIMENT_METADATA} --working_space ${WORKSPACE_DIR} ${DOCKER_RUN_PARAMS}",
      "environment": {
        "DOCKER_IMAGE_MOUNT_POINT": IMAGE_MOUNT_POINT,
        "DOCKER_IMAGE": CANOPY_COVER_DOCKER_IMAGE,
        "DOCKER_PARAMS": "",
        "EXPERIMENT_METADATA": DOCKER_IMAGE_MOUNT_POINT + EXPERIMENT_METADATA,
        "METADATA": "\"" + DOCKER_IMAGE_MOUNT_POINT + ONE_FILE["METADATA_NAME"] + "\""",
        "WORKSPACE_DIR": DOCKER_IMAGE_MOUNT_POINT + CANOPY_COVER_WORKSPACE_DIR_NAME,
        "DOCKER_RUN_PARAMS": "\"" + DOCKER_IMAGE_MOUNT_POINT + ONE_FILE["NAME"] + "\""
      },
      "inputs": [
        ONE_FILE["PATH"],
        CANOPY_COVER_CACHE,
        ONE_FILE["METADATA"],
        CANOPY_COVER_METADATA,
        CANOPY_COVER_WORKSPACE
      ],
      "outputs": []
    } for ONE_FILE in FILE_LIST
  ]
}