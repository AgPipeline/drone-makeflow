{
  "define": {
    "BASE_DIR": BASE_DIR,
    "CC_CACHE_DIR": CACHE_DIR,
    "CC_EXPERIMENT_METADATA_RELATIVE_PATH": BASE_DIR + EXPERIMENT_METADATA_RELATIVE_PATH,
    "CC_SOURCE_IMAGES_DIR": BASE_DIR + DATA_FOLDER_NAME,
    "CC_DOCKER_IMAGE": "agdrone/transformer-canopycover:" + DOCKER_VERSION,
    "CC_METADATA": BASE_DIR + EXPERIMENT_METADATA_RELATIVE_PATH,
    "CC_WORKSPACE_DIR_NAME": "workspace",
    "CC_RESULT_FILENAME": "result.json",
    "CACHE_RESULTS_SCRIPT": BASE_DIR + RELATIVE_WORKING_FOLDER + "cache_results.py",
    "DOCKER_MOUNT_POINT": "/mnt/",
    "METADATA": DOCKER_MOUNT_POINT + EXPERIMENT_METADATA_RELATIVE_PATH,
    "PROCESS_FILE_LIST": [ONE_ENTRY for ONE_ENTRY in FILE_LIST if ONE_ENTRY["BASE_METADATA_NAME"] != ""]
  },
  "rules": [
    {
      "command": "echo Creating cache folder \\\"${CC_CACHE_DIR}\\\" && mkdir -p \"${CC_CACHE_DIR}\" ",
      "local_job": true,
      "environment": {
        "CC_CACHE_DIR": CC_CACHE_DIR,
      },
      "inputs": [],
      "output": [
        CC_CACHE_DIR
      ]
    },
    {
      "command": "echo Creating file workspace \\\"${CC_WORKSPACE}\\\" && mkdir -p \"${CC_WORKSPACE}\" && chmod a+w \"${CC_WORKSPACE}\" ",
      "local_job": true,
      "environment": {
        "CC_WORKSPACE": BASE_DIR + RELATIVE_WORKING_FOLDER + ONE_ENTRY["BASE_METADATA_NAME"] + "/" +  CC_WORKSPACE_DIR_NAME
      },
      "inputs": [],
      "outputs": [
        BASE_DIR + RELATIVE_WORKING_FOLDER + ONE_ENTRY["BASE_METADATA_NAME"] + "/" + CC_WORKSPACE_DIR_NAME
      ]
    } for ONE_ENTRY in PROCESS_FILE_LIST,
    {
      "command": "docker run --rm -v \"${IMAGE_MOUNT_SOURCE}:${DOCKER_MOUNT_POINT}\" ${CC_DOCKER_IMAGE} -d --metadata  \"${DOCKER_MOUNT_POINT}${EXPERIMENT_METADATA_RELATIVE_PATH}\" --metadata \"${ADDITIONAL_METADATA}\" --working_space \"${WORKSPACE_DIR}\" \"${DOCKER_RUN_PARAMS}\" ",
      "local_job": true,
       "environment": {
         "IMAGE_MOUNT_SOURCE": IMAGE_MOUNT_SOURCE,
         "DOCKER_MOUNT_POINT": DOCKER_MOUNT_POINT,
         "CC_DOCKER_IMAGE": CC_DOCKER_IMAGE,
         "RELATIVE_WORKING_FOLDER": RELATIVE_WORKING_FOLDER + ONE_ENTRY["BASE_METADATA_NAME"],
         "EXPERIMENT_METADATA_RELATIVE_PATH": EXPERIMENT_METADATA_RELATIVE_PATH,
         "ADDITIONAL_METADATA": ONE_ENTRY["METADATA"],
         "WORKSPACE_DIR": DOCKER_MOUNT_POINT + RELATIVE_WORKING_FOLDER + ONE_ENTRY["BASE_METADATA_NAME"] + "/" + CC_WORKSPACE_DIR_NAME,
         "DOCKER_RUN_PARAMS": ONE_ENTRY["PATH"]
       },
       "inputs": [
         BASE_DIR + RELATIVE_WORKING_FOLDER + ONE_ENTRY["BASE_METADATA_NAME"] + "/" + CC_WORKSPACE_DIR_NAME
       ],
      "outputs": [
        BASE_DIR + RELATIVE_WORKING_FOLDER + ONE_ENTRY["BASE_METADATA_NAME"] + "/" + CC_WORKSPACE_DIR_NAME + "/" + CC_RESULT_FILENAME
      ]

    } for ONE_ENTRY in PROCESS_FILE_LIST,
    {
      "command": "echo Copying results \\\"${CC_RUN_RESULTS}\\\" to \\\"${CC_CACHE_DIR}\\\" && mkdir -p \"${CC_CACHE_DIR}\/\" && cp \"${CC_RUN_RESULTS}\" \"${CC_CACHE_DIR}\/\" ",
      "local_job": true,
      "environment": {
        "CC_RUN_RESULTS": BASE_DIR + RELATIVE_WORKING_FOLDER + ONE_ENTRY["BASE_METADATA_NAME"] + "/" + CC_WORKSPACE_DIR_NAME + "/" + CC_RESULT_FILENAME,
        "CC_CACHE_DIR": CC_CACHE_DIR + ONE_ENTRY["BASE_METADATA_NAME"]
      },
      "inputs": [
        BASE_DIR + RELATIVE_WORKING_FOLDER + ONE_ENTRY["BASE_METADATA_NAME"] + "/" + CC_WORKSPACE_DIR_NAME + "/" + CC_RESULT_FILENAME
      ],
      "outputs": [
        CC_CACHE_DIR + ONE_ENTRY["BASE_METADATA_NAME"] + "/" + CC_RESULT_FILENAME
      ]
    } for ONE_ENTRY in PROCESS_FILE_LIST,
    {
      "command": "echo Processing results && python3 \"${CACHE_RESULTS_SCRIPT}\" --extra_files \"${CC_METADATA}\" \"${CC_RUN_RESULTS}\" \"${CC_CACHE_DIR}\" ",
      "local_job": true,
      "environment": {
        "CACHE_RESULTS_SCRIPT": CACHE_RESULTS_SCRIPT,
        "CC_METADATA": CC_METADATA,
        "CC_RUN_RESULTS": CC_CACHE_DIR + ONE_ENTRY["BASE_METADATA_NAME"] + "/" + CC_RESULT_FILENAME,
        "CC_CACHE_DIR": CC_CACHE_DIR + ONE_ENTRY["BASE_METADATA_NAME"]
      },
      "inputs": [
        CC_CACHE_DIR + ONE_ENTRY["BASE_METADATA_NAME"] + "/" + CC_RESULT_FILENAME
      ],
      "outputs": [
        CC_CACHE_DIR + ONE_ENTRY["BASE_METADATA_NAME"]
      ]
    } for ONE_ENTRY in PROCESS_FILE_LIST,
    {
      "command": "echo copying \\\"${CACHE_DIR}${FILE_NAME}\\\" \\\"${RESULTS_FILE_PATH}\\\" && mkdir -p \"${RESULTS_FILE_FOLDER}\" && cp \"${CACHE_DIR}${FILE_NAME}\" \"${RESULTS_FILE_PATH}\"",
      "local_job": true,
      "environment": {
        "CACHE_DIR": CC_CACHE_DIR + COPIES[0] + "/",
        "FILE_NAME": COPIES[1],
        "RESULTS_FILE_FOLDER": RESULTS_FILE_PATH + COPIES[0],
        "RESULTS_FILE_PATH": RESULTS_FILE_PATH + COPIES[0] + "/"
      },
      "inputs": [
        CC_CACHE_DIR + COPIES[0]
      ],
      "outputs": [
        RESULTS_FILE_PATH + COPIES[0] + "/" + COPIES[1]
      ]
    } for COPIES in [[ONE_ENTRY["BASE_METADATA_NAME"], FILE_NAME] for ONE_ENTRY in PROCESS_FILE_LIST for FILE_NAME in RESULTS_FILE_NAMES]
  ]
}
